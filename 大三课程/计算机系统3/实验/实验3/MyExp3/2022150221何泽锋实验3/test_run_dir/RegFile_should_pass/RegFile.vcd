$date
2023-09-18T13:18+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module RegFile $end
 $var wire 32 ! regs_28 $end
 $var wire 32 " regs_4 $end
 $var wire 32 # regs_13 $end
 $var wire 32 $ regs_16 $end
 $var wire 32 % regs_7 $end
 $var wire 32 & regs_22 $end
 $var wire 32 ' regs_25 $end
 $var wire 32 ( regs_10 $end
 $var wire 32 ) regs_19 $end
 $var wire 32 * regs_1 $end
 $var wire 32 + regs_30 $end
 $var wire 32 , regs_9 $end
 $var wire 32 - regs_24 $end
 $var wire 5 . io_RS2 $end
 $var wire 32 / regs_27 $end
 $var wire 32 0 regs_12 $end
 $var wire 32 1 regs_3 $end
 $var wire 32 2 io_RS1_out $end
 $var wire 1 3 io_RF_wrEn $end
 $var wire 32 4 regs_15 $end
 $var wire 32 5 regs_21 $end
 $var wire 32 6 regs_6 $end
 $var wire 32 7 regs_0 $end
 $var wire 32 8 regs_18 $end
 $var wire 1 9 clock $end
 $var wire 32 : regs_29 $end
 $var wire 32 ; io_RS2_out $end
 $var wire 32 < regs_23 $end
 $var wire 32 = regs_17 $end
 $var wire 32 > regs_8 $end
 $var wire 5 ? io_Reg_WB $end
 $var wire 32 @ regs_11 $end
 $var wire 5 A io_RS1 $end
 $var wire 32 B regs_26 $end
 $var wire 32 C regs_2 $end
 $var wire 32 D regs_14 $end
 $var wire 32 E regs_5 $end
 $var wire 32 F regs_20 $end
 $var wire 1 G reset $end
 $var wire 32 H io_WB_data $end
 $var wire 32 I regs_31 $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000000000000000000 &
b00000000000000000000000000000000 D
b00000000000000000000000000000000 <
b00000000000000000000000000000000 '
b00000000000000000000000000000000 =
b00000000000000000000000000000000 (
b00000000000000000000000000000000 >
b00000000000000000000000000000000 !
b00000000000000000000000000000000 7
b00000000000000000000000000000000 "
b00000 .
b00000000000000000000000000000000 8
b00000000000000000000000000000000 #
09
b00000000000000000000000000000000 :
b00000000000000000000000000000000 2
b00000 ?
b00000000000000000000000000000000 I
03
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000 A
b00000000000000000000000000000000 6
b00000000000000000000000000000000 /
b00000000000000000000000000000000 E
b00000000000000000000000000000000 0
b00000000000000000000000000000000 F
b00000000000000000000000000000000 1
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
0G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 @
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 $
b00000000000000000000000000000000 B
b00000000000000000000000000000000 -
b00000000000000000000000000000000 %
b00000000000000000000000000000000 C
b00000000000000000000000000000000 ;
$end
#0
1G
#1
b00000000000000000000000000010111 <
b00000000000000000000000000001111 4
b00000000000000000000000000010101 5
b00000000000000000000000000000110 6
b00000000000000000000000000011011 /
b00000000000000000000000000001100 0
b00000000000000000000000000010100 F
b00000000000000000000000000000011 1
b00000000000000000000000000000001 *
b00000000000000000000000000011110 +
b00000000000000000000000000011111 I
b00000000000000000000000000001001 ,
b00000000000000000000000000011010 B
b00000000000000000000000000011000 -
b00000000000000000000000000000111 %
b00000000000000000000000000000010 C
b00000000000000000000000000010110 &
b00000000000000000000000000001110 D
b00000000000000000000000000011001 '
b00000000000000000000000000000101 E
b00000000000000000000000000010001 =
b00000000000000000000000000001010 (
b00000000000000000000000000001000 >
b00000000000000000000000000010011 )
b00000000000000000000000000011100 !
b00000000000000000000000000000100 "
b00000000000000000000000000001011 @
b00000000000000000000000000010010 8
b00000000000000000000000000001101 #
19
b00000000000000000000000000010000 $
b00000000000000000000000000011101 :
#6
0G
09
#11
19
#16
13
b00001 ?
b01000 .
b00000000000000000000000000000101 2
09
b00000000000000000001001000110100 H
b00101 A
b00000000000000000000000000001000 ;
#21
b00000000000000000001001000110100 *
19
#26
03
b00000 ?
b00000 .
b00000000000000000001001000110100 2
09
b00000000000000000000000000000000 H
b00000 A
